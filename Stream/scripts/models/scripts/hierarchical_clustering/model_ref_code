model_description = """
            <div class="code-container">
                <div class="code-header">
                    <span>MODEL REFERENCE CODE</span>
                    <span>Hierarchical Clustering</span>
                </div>
                <div>
                    # Prepare data
                    X = df[features].values
                    
                    # Standardize the data
                    from sklearn.preprocessing import StandardScaler
                    scaler = StandardScaler()
                    X_scaled = scaler.fit_transform(X)
                    
                    # Create and fit the model
                    from sklearn.cluster import AgglomerativeClustering
                    model = AgglomerativeClustering(
                        n_clusters=n_clusters,
                        metric=metric,
                        linkage=linkage,
                        compute_full_tree=compute_full_tree,
                        distance_threshold=distance_threshold
                    )
                    
                    # Make predictions (cluster labels)
                    cluster_labels = model.fit_predict(X_scaled)
                    
                    # Calculate clustering metrics
                    from sklearn.metrics import silhouette_score, calinski_harabasz_score, davies_bouldin_score
                    
                    silhouette_avg = silhouette_score(X_scaled, cluster_labels)
                    calinski_score = calinski_harabasz_score(X_scaled, cluster_labels)
                    davies_score = davies_bouldin_score(X_scaled, cluster_labels)
                    
                    # Store results
                    st.session_state.model_results = {
                        'model': model,
                        'scaler': scaler,
                        'metrics': {
                            'Silhouette Score': silhouette_avg,
                            'Calinski-Harabasz Score': calinski_score,
                            'Davies-Bouldin Score': davies_score,
                            'Number of Clusters': n_clusters,
                            'Cluster Sizes': [sum(cluster_labels == i) for i in range(n_clusters)]
                        },
                        'cluster_labels': cluster_labels,
                        'features': features,
                        'X_scaled': X_scaled
                    }
                </div>
            </div>
            """